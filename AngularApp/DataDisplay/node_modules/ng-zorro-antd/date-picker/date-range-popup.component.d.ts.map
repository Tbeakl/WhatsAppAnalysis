{"version":3,"file":"date-range-popup.component.d.ts","sources":["date-range-popup.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction } from '@angular/cdk/bidi';\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CandyDate, CompatibleValue, SingleValue } from 'ng-zorro-antd/core/time';\r\nimport { FunctionProp } from 'ng-zorro-antd/core/types';\r\nimport { NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';\r\nimport { DatePickerService } from './date-picker.service';\r\nimport { CompatibleDate, DisabledDateFn, DisabledTimeFn, NzDateMode, PresetRanges, RangePartType, SupportTimeOptions } from './standard-types';\r\nexport declare class DateRangePopupComponent implements OnInit, OnChanges, OnDestroy {\r\n    datePickerService: DatePickerService;\r\n    cdr: ChangeDetectorRef;\r\n    isRange: boolean;\r\n    inline: boolean;\r\n    showWeek: boolean;\r\n    locale: NzCalendarI18nInterface | undefined;\r\n    disabledDate?: DisabledDateFn;\r\n    disabledTime?: DisabledTimeFn;\r\n    showToday: boolean;\r\n    showNow: boolean;\r\n    showTime: SupportTimeOptions | boolean;\r\n    extraFooter?: TemplateRef<void> | string;\r\n    ranges?: PresetRanges;\r\n    dateRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\r\n    panelMode: NzDateMode | NzDateMode[];\r\n    defaultPickerValue: CompatibleDate | undefined | null;\r\n    dir: Direction;\r\n    readonly panelModeChange: EventEmitter<NzDateMode | NzDateMode[]>;\r\n    readonly calendarChange: EventEmitter<CompatibleValue>;\r\n    readonly resultOk: EventEmitter<void>;\r\n    prefixCls: string;\r\n    endPanelMode: NzDateMode | NzDateMode[];\r\n    timeOptions: SupportTimeOptions | SupportTimeOptions[] | null;\r\n    hoverValue: SingleValue[];\r\n    checkedPartArr: boolean[];\r\n    destroy$: Subject<unknown>;\r\n    get hasTimePicker(): boolean;\r\n    get hasFooter(): boolean;\r\n    constructor(datePickerService: DatePickerService, cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    updateActiveDate(): void;\r\n    /**\r\n     * Prevent input losing focus when click panel\r\n     *\r\n     * @param event\r\n     */\r\n    onMousedown(event: MouseEvent): void;\r\n    onClickOk(): void;\r\n    onClickToday(value: CandyDate): void;\r\n    onCellHover(value: CandyDate): void;\r\n    onPanelModeChange(mode: NzDateMode, partType?: RangePartType): void;\r\n    onActiveDateChange(value: CandyDate, partType: RangePartType): void;\r\n    onSelectTime(value: CandyDate, partType?: RangePartType): void;\r\n    changeValueFromSelect(value: CandyDate, emitValue?: boolean): void;\r\n    reversedPart(part: RangePartType): RangePartType;\r\n    getPanelMode(panelMode: NzDateMode | NzDateMode[], partType?: RangePartType): NzDateMode;\r\n    getValue(partType?: RangePartType): CandyDate;\r\n    getActiveDate(partType?: RangePartType): CandyDate;\r\n    disabledStartTime: DisabledTimeFn;\r\n    disabledEndTime: DisabledTimeFn;\r\n    isOneAllowed(selectedValue: SingleValue[]): boolean;\r\n    isBothAllowed(selectedValue: SingleValue[]): boolean;\r\n    isAllowed(value: CompatibleValue, isBoth?: boolean): boolean;\r\n    getTimeOptions(partType?: RangePartType): SupportTimeOptions | null;\r\n    onClickPresetRange(val: PresetRanges[keyof PresetRanges]): void;\r\n    onPresetRangeMouseLeave(): void;\r\n    onHoverPresetRange(val: PresetRanges[keyof PresetRanges]): void;\r\n    getObjectKeys(obj?: PresetRanges): string[];\r\n    show(partType: RangePartType): boolean;\r\n    private clearHoverValue;\r\n    private buildTimeOptions;\r\n    private overrideTimeOptions;\r\n    private overrideHms;\r\n}\r\n"]}