{"version":3,"file":"abstract-table.d.ts","sources":["abstract-table.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { EventEmitter, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { CandyDate } from 'ng-zorro-antd/core/time';\r\nimport { FunctionProp, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { isNonEmptyString, isTemplateRef } from 'ng-zorro-antd/core/util';\r\nimport { NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';\r\nimport { DateBodyRow, DateCell } from './interface';\r\nexport declare abstract class AbstractTable implements OnInit, OnChanges {\r\n    isTemplateRef: typeof isTemplateRef;\r\n    isNonEmptyString: typeof isNonEmptyString;\r\n    headRow: DateCell[];\r\n    bodyRows: DateBodyRow[];\r\n    MAX_ROW: number;\r\n    MAX_COL: number;\r\n    prefixCls: string;\r\n    value: CandyDate;\r\n    locale: NzCalendarI18nInterface;\r\n    activeDate: CandyDate;\r\n    showWeek: boolean;\r\n    selectedValue: CandyDate[];\r\n    hoverValue: CandyDate[];\r\n    disabledDate?: (d: Date) => boolean;\r\n    cellRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\r\n    fullCellRender?: string | TemplateRef<Date> | FunctionProp<TemplateRef<Date> | string>;\r\n    readonly valueChange: EventEmitter<CandyDate>;\r\n    readonly cellHover: EventEmitter<CandyDate>;\r\n    protected render(): void;\r\n    trackByBodyRow(_index: number, item: DateBodyRow): NzSafeAny;\r\n    trackByBodyColumn(_index: number, item: DateCell): NzSafeAny;\r\n    hasRangeValue(): boolean;\r\n    getClassMap(cell: DateCell): {\r\n        [key: string]: boolean;\r\n    };\r\n    abstract makeHeadRow(): DateCell[];\r\n    abstract makeBodyRows(): DateBodyRow[];\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    private isDateRealChange;\r\n    private isSameDate;\r\n}\r\n"]}