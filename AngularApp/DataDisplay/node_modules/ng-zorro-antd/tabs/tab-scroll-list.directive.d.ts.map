{"version":3,"file":"tab-scroll-list.directive.d.ts","sources":["tab-scroll-list.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { NzTabScrollEvent, NzTabScrollEventHandlerFun, NzTabScrollListOffset, NzTabScrollListOffsetEvent } from './interfaces';\r\nexport declare class NzTabScrollListDirective implements OnInit, OnDestroy {\r\n    private ngZone;\r\n    private elementRef;\r\n    lastWheelDirection: 'x' | 'y' | null;\r\n    lastWheelTimestamp: number;\r\n    lastTimestamp: number;\r\n    lastTimeDiff: number;\r\n    lastMixedWheel: number;\r\n    lastWheelPrevent: boolean;\r\n    touchPosition: NzTabScrollListOffset | null;\r\n    lastOffset: NzTabScrollListOffset | null;\r\n    motion: number;\r\n    unsubscribe: () => void;\r\n    readonly offsetChange: EventEmitter<NzTabScrollListOffsetEvent>;\r\n    readonly tabScroll: EventEmitter<NzTabScrollEvent>;\r\n    constructor(ngZone: NgZone, elementRef: ElementRef<HTMLElement>);\r\n    ngOnInit(): void;\r\n    subscribeWrap<T extends NzTabScrollEvent['event']>(type: NzTabScrollEvent['type'], observable: Observable<T>, handler: NzTabScrollEventHandlerFun<T>): Subscription;\r\n    onTouchEnd: (e: TouchEvent) => void;\r\n    onTouchMove: (e: TouchEvent) => void;\r\n    onTouchStart: (e: TouchEvent) => void;\r\n    onWheel: (e: WheelEvent) => void;\r\n    onOffset(x: number, y: number, event: Event): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}