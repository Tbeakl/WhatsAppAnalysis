{"version":3,"file":"tab.component.d.ts","sources":["tab.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { EventEmitter, InjectionToken, OnChanges, OnDestroy, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { TabTemplateContext } from './interfaces';\r\nimport { NzTabLinkDirective, NzTabLinkTemplateDirective } from './tab-link.directive';\r\n/**\r\n * Used to provide a tab set to a tab without causing a circular dependency.\r\n */\r\nexport declare const NZ_TAB_SET: InjectionToken<any>;\r\nexport declare class NzTabComponent implements OnChanges, OnDestroy {\r\n    closestTabSet: NzSafeAny;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzClosable: BooleanInput;\r\n    static ngAcceptInputType_nzForceRender: BooleanInput;\r\n    nzTitle: string | TemplateRef<TabTemplateContext>;\r\n    nzClosable: boolean;\r\n    nzCloseIcon: string | TemplateRef<NzSafeAny>;\r\n    nzDisabled: boolean;\r\n    nzForceRender: boolean;\r\n    readonly nzSelect: EventEmitter<void>;\r\n    readonly nzDeselect: EventEmitter<void>;\r\n    readonly nzClick: EventEmitter<void>;\r\n    readonly nzContextmenu: EventEmitter<MouseEvent>;\r\n    nzTabLinkTemplateDirective: NzTabLinkTemplateDirective;\r\n    template: TemplateRef<void> | null;\r\n    linkDirective: NzTabLinkDirective;\r\n    contentTemplate: TemplateRef<NzSafeAny>;\r\n    isActive: boolean;\r\n    position: number | null;\r\n    origin: number | null;\r\n    readonly stateChanges: Subject<void>;\r\n    get content(): TemplateRef<NzSafeAny>;\r\n    get label(): string | TemplateRef<NzSafeAny>;\r\n    constructor(closestTabSet: NzSafeAny);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}