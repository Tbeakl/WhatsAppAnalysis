{"version":3,"file":"pagination.component.d.ts","sources":["pagination.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { NzBreakpointService } from 'ng-zorro-antd/core/services';\r\nimport { BooleanInput, NumberInput } from 'ng-zorro-antd/core/types';\r\nimport { NzI18nService, NzPaginationI18nInterface } from 'ng-zorro-antd/i18n';\r\nimport { PaginationItemRenderContext } from './pagination.types';\r\nexport declare class NzPaginationComponent implements OnInit, OnDestroy, OnChanges {\r\n    private i18n;\r\n    private cdr;\r\n    private breakpointService;\r\n    protected nzConfigService: NzConfigService;\r\n    private directionality;\r\n    private elementRef;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzShowSizeChanger: BooleanInput;\r\n    static ngAcceptInputType_nzHideOnSinglePage: BooleanInput;\r\n    static ngAcceptInputType_nzShowQuickJumper: BooleanInput;\r\n    static ngAcceptInputType_nzSimple: BooleanInput;\r\n    static ngAcceptInputType_nzResponsive: BooleanInput;\r\n    static ngAcceptInputType_nzTotal: NumberInput;\r\n    static ngAcceptInputType_nzPageIndex: NumberInput;\r\n    static ngAcceptInputType_nzPageSize: NumberInput;\r\n    readonly nzPageSizeChange: EventEmitter<number>;\r\n    readonly nzPageIndexChange: EventEmitter<number>;\r\n    nzShowTotal: TemplateRef<{\r\n        $implicit: number;\r\n        range: [number, number];\r\n    }> | null;\r\n    nzItemRender: TemplateRef<PaginationItemRenderContext> | null;\r\n    nzSize: 'default' | 'small';\r\n    nzPageSizeOptions: number[];\r\n    nzShowSizeChanger: boolean;\r\n    nzShowQuickJumper: boolean;\r\n    nzSimple: boolean;\r\n    nzDisabled: boolean;\r\n    nzResponsive: boolean;\r\n    nzHideOnSinglePage: boolean;\r\n    nzTotal: number;\r\n    nzPageIndex: number;\r\n    nzPageSize: number;\r\n    showPagination: boolean;\r\n    locale: NzPaginationI18nInterface;\r\n    size: 'default' | 'small';\r\n    dir: Direction;\r\n    private destroy$;\r\n    private total$;\r\n    validatePageIndex(value: number, lastIndex: number): number;\r\n    onPageIndexChange(index: number): void;\r\n    onPageSizeChange(size: number): void;\r\n    onTotalChange(total: number): void;\r\n    getLastIndex(total: number, pageSize: number): number;\r\n    constructor(i18n: NzI18nService, cdr: ChangeDetectorRef, breakpointService: NzBreakpointService, nzConfigService: NzConfigService, directionality: Directionality, elementRef: ElementRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n}\r\n"]}