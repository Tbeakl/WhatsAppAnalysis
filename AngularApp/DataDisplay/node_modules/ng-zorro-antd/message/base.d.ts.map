{"version":3,"file":"base.d.ts","sources":["base.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ComponentType, Overlay } from '@angular/cdk/overlay';\r\nimport { ChangeDetectorRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\r\nimport { NzMessageData, NzMessageDataOptions } from './typings';\r\nexport declare abstract class NzMNService {\r\n    protected nzSingletonService: NzSingletonService;\r\n    protected overlay: Overlay;\r\n    private injector;\r\n    protected abstract componentPrefix: string;\r\n    protected container?: NzMNContainerComponent;\r\n    constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector);\r\n    remove(id?: string): void;\r\n    protected getInstanceId(): string;\r\n    protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T;\r\n}\r\nexport declare abstract class NzMNContainerComponent implements OnInit, OnDestroy {\r\n    protected cdr: ChangeDetectorRef;\r\n    protected nzConfigService: NzConfigService;\r\n    config?: Required<MessageConfig>;\r\n    instances: Array<Required<NzMessageData>>;\r\n    protected readonly destroy$: Subject<void>;\r\n    constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    create(data: NzMessageData): Required<NzMessageData>;\r\n    remove(id: string, userAction?: boolean): void;\r\n    removeAll(): void;\r\n    protected onCreate(instance: NzMessageData): Required<NzMessageData>;\r\n    protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void;\r\n    protected readyInstances(): void;\r\n    protected abstract updateConfig(): void;\r\n    protected abstract subscribeConfigChange(): void;\r\n    protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions;\r\n}\r\nexport declare abstract class NzMNComponent implements OnInit, OnDestroy {\r\n    protected cdr: ChangeDetectorRef;\r\n    instance: Required<NzMessageData>;\r\n    index?: number;\r\n    readonly destroyed: EventEmitter<{\r\n        id: string;\r\n        userAction: boolean;\r\n    }>;\r\n    readonly animationStateChanged: Subject<AnimationEvent>;\r\n    protected options: Required<NzMessageDataOptions>;\r\n    protected autoClose?: boolean;\r\n    protected closeTimer?: number;\r\n    protected userAction: boolean;\r\n    protected eraseTimer: number | null;\r\n    protected eraseTimingStart?: number;\r\n    protected eraseTTL: number;\r\n    protected constructor(cdr: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    onEnter(): void;\r\n    onLeave(): void;\r\n    protected destroy(userAction?: boolean): void;\r\n    private initErase;\r\n    private updateTTL;\r\n    private startEraseTimeout;\r\n    private clearEraseTimeout;\r\n}\r\n"]}