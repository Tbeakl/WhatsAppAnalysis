{"version":3,"file":"rate.component.d.ts","sources":["rate.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { BooleanInput, NgClassType, NumberInput } from 'ng-zorro-antd/core/types';\r\nexport declare class NzRateComponent implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\r\n    nzConfigService: NzConfigService;\r\n    private renderer;\r\n    private cdr;\r\n    private directionality;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\r\n    static ngAcceptInputType_nzAllowHalf: BooleanInput;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\r\n    static ngAcceptInputType_nzCount: NumberInput;\r\n    private ulElement?;\r\n    nzAllowClear: boolean;\r\n    nzAllowHalf: boolean;\r\n    nzDisabled: boolean;\r\n    nzAutoFocus: boolean;\r\n    nzCharacter: TemplateRef<void>;\r\n    nzCount: number;\r\n    nzTooltips: string[];\r\n    readonly nzOnBlur: EventEmitter<FocusEvent>;\r\n    readonly nzOnFocus: EventEmitter<FocusEvent>;\r\n    readonly nzOnHoverChange: EventEmitter<number>;\r\n    readonly nzOnKeyDown: EventEmitter<KeyboardEvent>;\r\n    classMap: NgClassType;\r\n    starArray: number[];\r\n    starStyleArray: NgClassType[];\r\n    dir: Direction;\r\n    private readonly destroy$;\r\n    private hasHalf;\r\n    private hoverValue;\r\n    private isFocused;\r\n    private _value;\r\n    get nzValue(): number;\r\n    set nzValue(input: number);\r\n    constructor(nzConfigService: NzConfigService, renderer: Renderer2, cdr: ChangeDetectorRef, directionality: Directionality);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    onItemClick(index: number, isHalf: boolean): void;\r\n    onItemHover(index: number, isHalf: boolean): void;\r\n    onRateLeave(): void;\r\n    onFocus(e: FocusEvent): void;\r\n    onBlur(e: FocusEvent): void;\r\n    focus(): void;\r\n    blur(): void;\r\n    onKeyDown(e: KeyboardEvent): void;\r\n    private updateStarArray;\r\n    private updateStarStyle;\r\n    writeValue(value: number | null): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(fn: (_: number) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    onChange: (value: number) => void;\r\n    onTouched: () => void;\r\n}\r\n"]}