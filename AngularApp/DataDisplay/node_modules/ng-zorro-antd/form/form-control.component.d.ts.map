{"version":3,"file":"form-control.component.d.ts","sources":["form-control.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { AfterContentInit, ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { AbstractControl, FormControlDirective, FormControlName, NgModel } from '@angular/forms';\r\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\r\nimport { NzFormDirective } from './form.directive';\r\ndeclare const iconTypeMap: {\r\n    readonly error: \"close-circle-fill\";\r\n    readonly validating: \"loading\";\r\n    readonly success: \"check-circle-fill\";\r\n    readonly warning: \"exclamation-circle-fill\";\r\n};\r\nexport declare class NzFormControlComponent implements OnChanges, OnDestroy, OnInit, AfterContentInit, OnDestroy {\r\n    private nzFormItemComponent;\r\n    private cdr;\r\n    private nzFormDirective;\r\n    static ngAcceptInputType_nzHasFeedback: BooleanInput;\r\n    static ngAcceptInputType_nzRequired: BooleanInput;\r\n    static ngAcceptInputType_nzNoColon: BooleanInput;\r\n    static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\r\n    private _hasFeedback;\r\n    private validateChanges;\r\n    private validateString;\r\n    private destroyed$;\r\n    private localeId;\r\n    private autoErrorTip?;\r\n    private get disableAutoTips();\r\n    status: NzFormControlStatusType;\r\n    validateControl: AbstractControl | NgModel | null;\r\n    iconType: typeof iconTypeMap[keyof typeof iconTypeMap] | null;\r\n    innerTip: string | TemplateRef<{\r\n        $implicit: AbstractControl | NgModel;\r\n    }> | null;\r\n    defaultValidateControl?: FormControlName | FormControlDirective;\r\n    nzSuccessTip?: string | TemplateRef<{\r\n        $implicit: AbstractControl | NgModel;\r\n    }>;\r\n    nzWarningTip?: string | TemplateRef<{\r\n        $implicit: AbstractControl | NgModel;\r\n    }>;\r\n    nzErrorTip?: string | TemplateRef<{\r\n        $implicit: AbstractControl | NgModel;\r\n    }>;\r\n    nzValidatingTip?: string | TemplateRef<{\r\n        $implicit: AbstractControl | NgModel;\r\n    }>;\r\n    nzExtra?: string | TemplateRef<void>;\r\n    nzAutoTips: Record<string, Record<string, string>>;\r\n    nzDisableAutoTips: boolean | 'default';\r\n    set nzHasFeedback(value: boolean);\r\n    get nzHasFeedback(): boolean;\r\n    set nzValidateStatus(value: string | AbstractControl | FormControlName | NgModel);\r\n    private watchControl;\r\n    private setStatus;\r\n    private getControlStatus;\r\n    private validateControlStatus;\r\n    private getInnerTip;\r\n    private updateAutoErrorTip;\r\n    private subscribeAutoTips;\r\n    constructor(elementRef: ElementRef, nzFormItemComponent: NzFormItemComponent, cdr: ChangeDetectorRef, renderer: Renderer2, i18n: NzI18nService, nzFormDirective: NzFormDirective);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    ngAfterContentInit(): void;\r\n}\r\nexport {};\r\n"]}