{"version":3,"file":"modal.component.d.ts","sources":["modal.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges, TemplateRef, Type, ViewContainerRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { NzButtonType } from 'ng-zorro-antd/button';\r\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\r\nimport { NzModalLegacyAPI } from './modal-legacy-api';\r\nimport { NzModalRef } from './modal-ref';\r\nimport { ModalButtonOptions, ModalTypes, OnClickCallback, StyleObjectLike } from './modal-types';\r\nimport { NzModalService } from './modal.service';\r\nexport declare class NzModalComponent<T = NzSafeAny, R = NzSafeAny> implements OnChanges, NzModalLegacyAPI<T, R>, OnDestroy {\r\n    private cdr;\r\n    private modal;\r\n    private viewContainerRef;\r\n    static ngAcceptInputType_nzMask: BooleanInput;\r\n    static ngAcceptInputType_nzMaskClosable: BooleanInput;\r\n    static ngAcceptInputType_nzCloseOnNavigation: BooleanInput;\r\n    static ngAcceptInputType_nzVisible: BooleanInput;\r\n    static ngAcceptInputType_nzClosable: BooleanInput;\r\n    static ngAcceptInputType_nzOkLoading: BooleanInput;\r\n    static ngAcceptInputType_nzOkDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzCancelDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzCancelLoading: BooleanInput;\r\n    static ngAcceptInputType_nzKeyboard: BooleanInput;\r\n    static ngAcceptInputType_nzNoAnimation: BooleanInput;\r\n    static ngAcceptInputType_nzOkDanger: BooleanInput;\r\n    static ngAcceptInputType_nzCentered: BooleanInput;\r\n    nzMask?: boolean;\r\n    nzMaskClosable?: boolean;\r\n    nzCloseOnNavigation?: boolean;\r\n    nzVisible: boolean;\r\n    nzClosable: boolean;\r\n    nzOkLoading: boolean;\r\n    nzOkDisabled: boolean;\r\n    nzCancelDisabled: boolean;\r\n    nzCancelLoading: boolean;\r\n    nzKeyboard: boolean;\r\n    nzNoAnimation: boolean;\r\n    nzCentered: boolean;\r\n    nzContent?: string | TemplateRef<{}> | Type<T>;\r\n    nzComponentParams?: T;\r\n    nzFooter?: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null;\r\n    nzZIndex: number;\r\n    nzWidth: number | string;\r\n    nzWrapClassName?: string;\r\n    nzClassName?: string;\r\n    nzStyle?: object;\r\n    nzTitle?: string | TemplateRef<{}>;\r\n    nzCloseIcon: string | TemplateRef<void>;\r\n    nzMaskStyle?: StyleObjectLike;\r\n    nzBodyStyle?: StyleObjectLike;\r\n    nzOkText?: string | null;\r\n    nzCancelText?: string | null;\r\n    nzOkType: NzButtonType;\r\n    nzOkDanger: boolean;\r\n    nzIconType: string;\r\n    nzModalType: ModalTypes;\r\n    nzAutofocus: 'ok' | 'cancel' | 'auto' | null;\r\n    readonly nzOnOk: EventEmitter<T> | OnClickCallback<T> | NzSafeAny;\r\n    readonly nzOnCancel: EventEmitter<T> | OnClickCallback<T> | NzSafeAny;\r\n    readonly nzAfterOpen: EventEmitter<void>;\r\n    readonly nzAfterClose: EventEmitter<R>;\r\n    readonly nzVisibleChange: EventEmitter<boolean>;\r\n    set modalTitle(value: TemplateRef<NzSafeAny>);\r\n    contentFromContentChild: TemplateRef<NzSafeAny>;\r\n    set modalFooter(value: TemplateRef<NzSafeAny>);\r\n    private modalRef;\r\n    private destroy$;\r\n    get afterOpen(): Observable<void>;\r\n    get afterClose(): Observable<R>;\r\n    constructor(cdr: ChangeDetectorRef, modal: NzModalService, viewContainerRef: ViewContainerRef);\r\n    open(): void;\r\n    close(result?: R): void;\r\n    destroy(result?: R): void;\r\n    triggerOk(): void;\r\n    triggerCancel(): void;\r\n    getContentComponent(): T | void;\r\n    getElement(): HTMLElement | void;\r\n    getModalRef(): NzModalRef | null;\r\n    private setTitleWithTemplate;\r\n    private setFooterWithTemplate;\r\n    private getConfig;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}