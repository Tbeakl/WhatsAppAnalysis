{"version":3,"file":"date-picker.component.d.ts","sources":["date-picker.component.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { Direction, Directionality } from '@angular/cdk/bidi';\r\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair, HorizontalConnectionPos, VerticalConnectionPos } from '@angular/cdk/overlay';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\r\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\r\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\r\nimport { CandyDate, CompatibleValue } from 'ng-zorro-antd/core/time';\r\nimport { BooleanInput, FunctionProp, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\r\nimport { DateHelperService, NzDatePickerI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\r\nimport { DatePickerService } from './date-picker.service';\r\nimport { DateRangePopupComponent } from './date-range-popup.component';\r\nimport { CompatibleDate, DisabledTimeFn, NzDateMode, PresetRanges, RangePartType, SupportTimeOptions } from './standard-types';\r\nexport declare type NzDatePickerSizeType = 'large' | 'default' | 'small';\r\n/**\r\n * The base picker for all common APIs\r\n */\r\nexport declare class NzDatePickerComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit, ControlValueAccessor {\r\n    nzConfigService: NzConfigService;\r\n    datePickerService: DatePickerService;\r\n    protected i18n: NzI18nService;\r\n    protected cdr: ChangeDetectorRef;\r\n    private renderer;\r\n    private elementRef;\r\n    private dateHelper;\r\n    private nzResizeObserver;\r\n    private platform;\r\n    private directionality;\r\n    noAnimation?: NzNoAnimationDirective | undefined;\r\n    readonly _nzModuleName: NzConfigKey;\r\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\r\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\r\n    static ngAcceptInputType_nzDisabled: BooleanInput;\r\n    static ngAcceptInputType_nzBorderless: BooleanInput;\r\n    static ngAcceptInputType_nzInputReadOnly: BooleanInput;\r\n    static ngAcceptInputType_nzInline: BooleanInput;\r\n    static ngAcceptInputType_nzOpen: BooleanInput;\r\n    static ngAcceptInputType_nzShowToday: BooleanInput;\r\n    static ngAcceptInputType_nzShowNow: BooleanInput;\r\n    static ngAcceptInputType_nzMode: NzDateMode | NzDateMode[] | string | string[] | null | undefined;\r\n    static ngAcceptInputType_nzShowTime: BooleanInput | SupportTimeOptions | null | undefined;\r\n    isRange: boolean;\r\n    extraFooter?: TemplateRef<NzSafeAny> | string;\r\n    dir: Direction;\r\n    panelMode: NzDateMode | NzDateMode[];\r\n    private destroyed$;\r\n    private isCustomPlaceHolder;\r\n    private isCustomFormat;\r\n    private showTime;\r\n    nzAllowClear: boolean;\r\n    nzAutoFocus: boolean;\r\n    nzDisabled: boolean;\r\n    nzBorderless: boolean;\r\n    nzInputReadOnly: boolean;\r\n    nzInline: boolean;\r\n    nzOpen?: boolean;\r\n    nzDisabledDate?: (d: Date) => boolean;\r\n    nzLocale: NzDatePickerI18nInterface;\r\n    nzPlaceHolder: string | string[];\r\n    nzPopupStyle: object;\r\n    nzDropdownClassName?: string;\r\n    nzSize: NzDatePickerSizeType;\r\n    nzFormat: string;\r\n    nzDateRender?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<Date> | string>;\r\n    nzDisabledTime?: DisabledTimeFn;\r\n    nzRenderExtraFooter?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<NzSafeAny> | string>;\r\n    nzShowToday: boolean;\r\n    nzMode: NzDateMode;\r\n    nzShowNow: boolean;\r\n    nzRanges?: PresetRanges;\r\n    nzDefaultPickerValue: CompatibleDate | null;\r\n    nzSeparator?: string;\r\n    nzSuffixIcon: string | TemplateRef<NzSafeAny>;\r\n    nzBackdrop: boolean;\r\n    nzId: string | null;\r\n    readonly nzOnPanelChange: EventEmitter<string | NzDateMode[] | string[]>;\r\n    readonly nzOnCalendarChange: EventEmitter<(Date | null)[]>;\r\n    readonly nzOnOk: EventEmitter<CompatibleDate | null>;\r\n    readonly nzOnOpenChange: EventEmitter<boolean>;\r\n    get nzShowTime(): SupportTimeOptions | boolean;\r\n    set nzShowTime(value: SupportTimeOptions | boolean);\r\n    cdkConnectedOverlay?: CdkConnectedOverlay;\r\n    panel: DateRangePopupComponent;\r\n    separatorElement?: ElementRef;\r\n    pickerInput?: ElementRef<HTMLInputElement>;\r\n    rangePickerInputs?: QueryList<ElementRef<HTMLInputElement>>;\r\n    origin: CdkOverlayOrigin;\r\n    document: Document;\r\n    inputSize: number;\r\n    inputWidth?: number;\r\n    destroy$: Subject<unknown>;\r\n    prefixCls: string;\r\n    inputValue: NzSafeAny;\r\n    activeBarStyle: object;\r\n    overlayOpen: boolean;\r\n    overlayPositions: ConnectionPositionPair[];\r\n    currentPositionX: HorizontalConnectionPos;\r\n    currentPositionY: VerticalConnectionPos;\r\n    get realOpenState(): boolean;\r\n    ngAfterViewInit(): void;\r\n    updateInputWidthAndArrowLeft(): void;\r\n    getInput(partType?: RangePartType): HTMLInputElement | undefined;\r\n    focus(): void;\r\n    onFocus(event: FocusEvent, partType?: RangePartType): void;\r\n    onFocusout(event: FocusEvent): void;\r\n    open(): void;\r\n    close(): void;\r\n    showClear(): boolean;\r\n    checkAndClose(): void;\r\n    onClickInputBox(event: MouseEvent): void;\r\n    onOverlayKeydown(event: KeyboardEvent): void;\r\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\r\n    onClickClear(event: MouseEvent): void;\r\n    updateInputValue(): void;\r\n    formatValue(value: CandyDate): string;\r\n    onInputChange(value: string, isEnter?: boolean): void;\r\n    onKeyupEnter(event: Event): void;\r\n    private checkValidDate;\r\n    getPlaceholder(partType?: RangePartType): string;\r\n    isEmptyValue(value: CompatibleValue): boolean;\r\n    isOpenHandledByUser(): boolean;\r\n    constructor(nzConfigService: NzConfigService, datePickerService: DatePickerService, i18n: NzI18nService, cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef, dateHelper: DateHelperService, nzResizeObserver: NzResizeObserver, platform: Platform, doc: NzSafeAny, directionality: Directionality, noAnimation?: NzNoAnimationDirective | undefined);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    setModeAndFormat(): void;\r\n    /**\r\n     * Triggered when overlayOpen changes (different with realOpenState)\r\n     *\r\n     * @param open The overlayOpen in picker component\r\n     */\r\n    onOpenChange(open: boolean): void;\r\n    onChangeFn: OnChangeType;\r\n    onTouchedFn: OnTouchedType;\r\n    writeValue(value: CompatibleDate): void;\r\n    registerOnChange(fn: OnChangeType): void;\r\n    registerOnTouched(fn: OnTouchedType): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    private setLocale;\r\n    private setDefaultPlaceHolder;\r\n    private getPropertyOfLocale;\r\n    private setValue;\r\n    renderClass(value: boolean): void;\r\n    onPanelModeChange(panelMode: NzDateMode | NzDateMode[]): void;\r\n    onCalendarChange(value: CompatibleValue): void;\r\n    onResultOk(): void;\r\n}\r\n"]}